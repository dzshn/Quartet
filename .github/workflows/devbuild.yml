name: Test Quartet and upload devbuild
on:
    push:
        paths:
            - .github/workflows/devbuild.yml
            - src/**
            - scripts/**
            - patcher/**
            - package.json
            - pnpm-lock.yaml

permissions:
    contents: write

jobs:
    build-node:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - uses: pnpm/action-setup@v2

            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: "pnpm"

            - name: Install project
              run: pnpm install

            - name: Lint with ESLint
              run: pnpm lint

            - name: Check for TypeScript errors
              run: pnpm tsc --noEmit

            - name: Build everything
              run: pnpm build --web

            - name: Clean irrelevant files
              run: rm -f dist/*.map dist/*.txt

            - name: Set release tag
              run: |
                  echo "release_tag=$(jq .version package.json -r) ($(git rev-parse --short HEAD))" >> $GITHUB_ENV

            - name: Upload devbuild
              run: |
                  gh release upload devbuild --clobber dist/*
                  gh release edit devbuild --title "Quartet INDEV $RELEASE_TAG"
              env:
                  RELEASE_TAG: ${{ env.release_tag }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    build-rust:
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest]

        runs-on: ${{ matrix.os }}
        defaults:
            run:
                # PowerShell will explod
                shell: bash
                working-directory: ./qpatcher

        steps:
            - uses: actions/checkout@v3

            - name: Test with clippy
              run: cargo clippy

            - name: Build patcher
              run: cargo build --release

            - if: ${{ matrix.os == 'ubuntu-latest' }}
              run: mv target/release/qpatcher qpatcher-cli-linux

            - if: ${{ matrix.os == 'windows-latest' }}
              run: mv target/release/qpatcher.exe qpatcher-cli-windows.exe

            - name: Upload devbuild
              run: gh release upload devbuild --clobber qpatcher-*
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
